{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kathy\\\\Desktop\\\\CareCompanionAIUnzipped\\\\src\\\\components\\\\GPTChatBot.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nconst GPTChatBot = () => {\n  const [messages, setMessages] = useState([{\n    role: 'system',\n    content: 'You are a friendly healthcare assistant helping seniors.'\n  }]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const newMessages = [...messages, {\n      role: 'user',\n      content: input\n    }];\n    setMessages(newMessages);\n    setInput('');\n    setLoading(true);\n    try {\n      const response = await axios.post('https://api.openai.com/v1/chat/completions', {\n        model: 'gpt-4',\n        messages: newMessages\n      }, {\n        headers: {\n          Authorization: `Bearer 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`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const reply = response.data.choices[0].message;\n      setMessages([...newMessages, reply]);\n    } catch (error) {\n      console.error(error);\n      alert('There was a problem contacting the assistant.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '1rem',\n      borderRadius: '10px',\n      marginTop: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"\\uD83E\\uDDD1\\u200D\\u2695\\uFE0F CareCompanion Chatbot\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '300px',\n      overflowY: 'auto',\n      marginBottom: '1rem',\n      backgroundColor: '#f9f9f9',\n      padding: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, messages.filter(m => m.role !== 'system').map((m, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    style: {\n      marginBottom: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, m.role === 'user' ? 'You' : 'Bot', \":\"), \" \", m.content))), /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: e => setInput(e.target.value),\n    onKeyPress: e => e.key === 'Enter' && sendMessage(),\n    style: {\n      width: '80%',\n      padding: '0.5rem'\n    },\n    placeholder: \"Ask me a question about Medicare...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendMessage,\n    style: {\n      marginLeft: '0.5rem',\n      padding: '0.5rem 1rem'\n    },\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, loading ? 'Thinking...' : 'Send'));\n};\nexport default GPTChatBot;","map":{"version":3,"names":["React","useState","axios","GPTChatBot","messages","setMessages","role","content","input","setInput","loading","setLoading","sendMessage","trim","newMessages","response","post","model","headers","Authorization","reply","data","choices","message","error","console","alert","createElement","style","border","padding","borderRadius","marginTop","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","height","overflowY","marginBottom","backgroundColor","filter","m","map","i","key","value","onChange","e","target","onKeyPress","width","placeholder","onClick","marginLeft","disabled"],"sources":["C:/Users/Kathy/Desktop/CareCompanionAIUnzipped/src/components/GPTChatBot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GPTChatBot = () => {\r\n  const [messages, setMessages] = useState([\r\n    { role: 'system', content: 'You are a friendly healthcare assistant helping seniors.' }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const newMessages = [...messages, { role: 'user', content: input }];\r\n    setMessages(newMessages);\r\n    setInput('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        'https://api.openai.com/v1/chat/completions',\r\n        {\r\n          model: 'gpt-4',\r\n          messages: newMessages\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer 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`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n\r\n      const reply = response.data.choices[0].message;\r\n      setMessages([...newMessages, reply]);\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('There was a problem contacting the assistant.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: '1px solid #ccc', padding: '1rem', borderRadius: '10px', marginTop: '2rem' }}>\r\n      <h3>üßë‚Äç‚öïÔ∏è CareCompanion Chatbot</h3>\r\n      <div style={{ height: '300px', overflowY: 'auto', marginBottom: '1rem', backgroundColor: '#f9f9f9', padding: '1rem' }}>\r\n        {messages.filter(m => m.role !== 'system').map((m, i) => (\r\n          <div key={i} style={{ marginBottom: '0.5rem' }}>\r\n            <strong>{m.role === 'user' ? 'You' : 'Bot'}:</strong> {m.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        value={input}\r\n        onChange={e => setInput(e.target.value)}\r\n        onKeyPress={e => e.key === 'Enter' && sendMessage()}\r\n        style={{ width: '80%', padding: '0.5rem' }}\r\n        placeholder=\"Ask me a question about Medicare...\"\r\n      />\r\n      <button onClick={sendMessage} style={{ marginLeft: '0.5rem', padding: '0.5rem 1rem' }} disabled={loading}>\r\n        {loading ? 'Thinking...' : 'Send'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GPTChatBot;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}